import os
from typing import Optional, Tuple

from config.factory import Database


def get_result(query: str, param: Tuple = None):
    conn = Database().instance
    cursor = conn.cursor()
    res = None
    if param is None:
        res = cursor.execute(query)
    else:
        res = cursor.execute(query, param)
    cursor.execute(query)
    conn.commit()
    cursor.close()
    conn.close()
    return res


def init_db():
    createUserCredentials = "CREATE TABLE IF NOT EXISTS user_credentials (\
        id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,\
        email VARCHAR(50) NOT NULL,\
        password VARCHAR(100) NOT NULL);"

    createUserProfile = "CREATE TABLE IF NOT EXISTS user_profiles (\
        id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,\
        login_id INT NOT NULL,\
        name VARCHAR(30),\
        budget INT DEFAULT 0,\
        total_spent NUMERIC DEFAULT 0,\
        phone VARCHAR(30),\
        profession VARCHAR(30),\
        alert BOOLEAN DEFAULT FALSE,\
        FOREIGN KEY (login_id) REFERENCES USER_CREDENTIALS(id) ON DELETE CASCADE);"
    createUserTransactions = "CREATE TABLE IF NOT EXISTS user_transactions (\
        id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,\
        login_id INT NOT NULL,\
        transaction NUMERIC NOT NULL,\
        mode VARCHAR(20),\
        category VARCHAR(20),\
        datestamp DATE,\
        note VARCHAR(50),\
        FOREIGN KEY (login_id) REFERENCES USER_CREDENTIALS(id) ON DELETE CASCADE);"

    get_result(createUserCredentials)
    get_result(createUserProfile)
    get_result(createUserTransactions)


class TransactionFormChoices:
    MODE = ["Online", "Credit Card", "Cash"]
    CATEGORY = ["Food", "Health", "Transport", "Shopping", "Entertainment", "Bills", "Debt Payment", "Other"]
